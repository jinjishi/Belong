package intership2.dao;
import java.sql.SQLException;
import java.util.ArrayList;

import intership2.dao.DbcpJdbcUtil;
import intership2.dao.Belong;
import java.sql.Connection; 
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.lang.Exception;
public class BelongDAOImpl implements BelongDAO {
	public boolean addBelong(Belong belong) throws Exception {
		boolean result=false;
		Connection connection = null; 
		PreparedStatement pStatement = null; 
		try { 
			connection = DbcpJdbcUtil.getConnection(); 
		    String sql = "use shopping insert into Belong(Storeid,Productid,Color,Size) values (?,?,?,?)";
		    pStatement = connection.prepareStatement(sql);
			pStatement.setString(1,belong.GetterStoreid()); 
		    pStatement.setString(2,belong.GetterProductid()); 
		    pStatement.setString(3,belong.GetterColor()); 
		    pStatement.setInt(4,belong.GetterSize());
		    pStatement.execute(); 
		    result=true;
		    System.out.println("result="+result);
		    pStatement.close(); 
		} catch (SQLException e) { 
			e.printStackTrace();
			result=false;
			} finally { 
				try { 
					connection.close();
					} catch (SQLException e) { 
						e.printStackTrace();
						}
				}
		return result;
		}
	public boolean delBelong(String sql) throws Exception {
		boolean result=false;
		Connection connection = null; 
		PreparedStatement pStatement = null; 
		try {
			connection = DbcpJdbcUtil.getConnection(); 
			pStatement = connection.prepareStatement(sql); 
			pStatement.execute();  
			int count=pStatement.getUpdateCount();
			if(count!=-1) {
				result=true;
			}
			else {
				result=false;
			}
			System.out.println("result="+result);
		}catch (SQLException e) { 
			e.printStackTrace();
			result=false;
			} finally { 
				try { 
					connection.close();
					} catch (SQLException e) { 
						e.printStackTrace();
						}
				}
		return result;
		}
	public ArrayList<Belong> getBelong(String sql) throws Exception{
		PreparedStatement pStatement = null; 
		Connection connection = null;
		ArrayList<Belong> belongs=new ArrayList<Belong>();
		boolean result=false;
		try {
			connection = DbcpJdbcUtil.getConnection(); 
		    pStatement =connection.prepareStatement(sql);
			ResultSet rs=pStatement.executeQuery();
			while(rs.next()) {
				Belong belong=new Belong();
				belong.SetterStoreid(rs.getString(1));
				belong.SetterProductid(rs.getString(2));
				belong.SetterColor(rs.getString(3));
				belong.SetterSize(rs.getInt(4));
				System.out.printf(belong.GetterStoreid()+"\t");
				System.out.printf(belong.GetterProductid()+"\t");
				System.out.printf(belong.GetterColor()+"\t");
				System.out.printf(belong.GetterSize()+"\n");
			}
			result=true;
			System.out.println("result="+result);
		}catch (SQLException e) { 
			e.printStackTrace();
			} 
				try { 
					connection.close();
					} catch (SQLException e) { 
						e.printStackTrace();
						}
				return belongs;
				}
	@SuppressWarnings("null")
	public boolean updateBelong(String sql) throws Exception
	{
		Connection connection = null;
		PreparedStatement pStatement = null; 
		boolean result=false;
		try {
			connection = DbcpJdbcUtil.getConnection(); 
			pStatement=connection.prepareStatement(sql);
			pStatement.execute();  
			int count=pStatement.getUpdateCount();
			if(count!=-1)
			{
				result=true;
			}
			else
			{
				result=false;
			}
			System.out.println("result="+result);
		}catch (SQLException e) { 
				e.printStackTrace();
				result=false;
				} finally { 
					try { 
						connection.close();
						} catch (SQLException e) { 
							e.printStackTrace();
							}
					}
			return result;
			}
	}
